{"version":3,"sources":["redux/store.jsx","components/PrivateRoute.jsx","components/PablicRoute.jsx","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/UserMenu/default-avatar.jpg","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/App/App.jsx","index.jsx","redux/contacts/contacts-actions.jsx","redux/contacts/constcts-operations.jsx","redux/contacts/contacts-selectors.jsx","redux/contacts/contacts-reducers.jsx","components/Container/Container.module.css","redux/auth/auth-operations.jsx","redux/auth/auth-selectors.jsx","redux/auth/auth-slice.jsx"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PablicRoute","restricted","shouldRedirect","Container","className","s","Navigation","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","exact","style","activeStyle","container","alingItems","avatar","marginRight","name","UserMenu","dispatch","useDispatch","getUsername","defaultAvatar","src","alt","width","type","onClick","authOperations","logOut","AuthNav","AppBar","justifyContent","alignItems","borderBottom","HomePage","lazy","Login","Register","Contacts","App","isFetchingCurrentUser","getIsFetchingCurrent","useEffect","fetchCurrentUser","fallback","height","path","ReactDOM","render","StrictMode","loading","document","getElementById","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsOperation","fetchContacts","a","axios","get","data","addContact","number","contact","post","deleteContact","contactId","delete","res","console","log","getContacts","state","items","getFilter","filter","getVisibleContacts","createSelector","normilizedFilter","toLowerCase","includes","contactsSelector","getLoading","createReducer","_","payload","id","combineReducers","module","exports","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","thunkAPI","getState","persistedToken","rejectWithValue","operations","user","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected"],"mappings":"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","file":"static/js/main.2efb580a.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport { \r\n  persistStore, \r\n  persistReducer, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } \r\n  from 'redux-persist'\r\nimport {contactsReducer} from './contacts';\r\nimport {authReducer} from './auth'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n}), logger]\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },  middleware,\r\n  devTools: process.env.NODE_ENV === 'development'\r\n})\r\n\r\n\r\nexport const persistor = persistStore(store)","import { authSelectors } from '../redux/auth'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function PrivateRoute({children, redirectTo = '/', ...routeProps}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    )\r\n}","import { authSelectors } from '../redux/auth'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function PablicRoute({children, restricted = false, redirectTo='/', ...routeProps}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    )\r\n}","import s from './Container.module.css';\r\n\r\nexport default function Container({children}) {\r\n    return (\r\n        <div className={s.Container}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import {useSelector} from 'react-redux'\r\nimport {authSelectors} from '../../redux/auth'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nexport default function Navigation() {\r\n\r\n    const styles = {\r\n        link: {\r\n          display: 'inline-block',\r\n          textDecoration: 'none',\r\n          padding: 12,\r\n          fontWeight: 700,\r\n          color: '#303C6C',\r\n        },\r\n        activeLink: {\r\n          color: '#F4976C',\r\n        },\r\n      };\r\n\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>Главная</NavLink>\r\n\r\n            {isLoggedIn && (\r\n                <NavLink to='/contacts' exact style={styles.link} activeStyle={styles.activeLink}>Заметки</NavLink>\r\n            )}\r\n        </nav>\r\n        \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.4eff0030.jpg\";","import {useSelector, useDispatch} from 'react-redux';\r\nimport {authSelectors,authOperations} from '../../redux/auth'\r\nimport defaultAvatar from './default-avatar.jpg'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        alingItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: 4,\r\n    },\r\n    name: {\r\n        fontWeight: 700,\r\n        marginRight: 12,\r\n    },\r\n}\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUsername);\r\n    const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar}/>\r\n            <span style={styles.name}>Добро пожаловать, {name}</span>\r\n            <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n                Выйти\r\n            </button>\r\n        </div>\r\n    );\r\n}","import {NavLink} from 'react-router-dom'\r\n\r\nexport default function AuthNav() {\r\n\r\n    const styles = {\r\n        link: {\r\n          display: 'inline-block',\r\n          textDecoration: 'none',\r\n          padding: 12,\r\n          fontWeight: 700,\r\n          color: '#303C6C',\r\n        },\r\n        activeLink: {\r\n          color: '#F4976C',\r\n        },\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <NavLink \r\n              to='/register' \r\n              exact \r\n              style={styles.link} \r\n              activeStyle={styles.activeLink}\r\n            >\r\n              Регистрация\r\n            </NavLink>\r\n\r\n            <NavLink \r\n              to='/login' \r\n              exact \r\n              style={styles.link} \r\n              activeStyle={styles.activeLink}\r\n            >\r\n              Войти\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import {useSelector} from 'react-redux'\r\nimport {authSelectors} from '../../redux/auth'\r\nimport Navigation from '../Navigation'\r\nimport UserMenu from '../UserMenu'\r\nimport AuthNav from '../AuthNav'\r\n\r\nexport default function AppBar() {\r\n\r\n    const styles = {\r\n        header: {\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          borderBottom: '1px solid #303C6C',\r\n        },\r\n      };\r\n\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return (\r\n        <header style={styles.header}>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    )\r\n}","\r\nimport {useEffect, Suspense, lazy} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Switch} from 'react-router-dom';\r\nimport {authOperations, authSelectors} from '../../redux/auth'\r\nimport Loader from 'react-loader-spinner'\r\nimport PrivateRoute from '../PrivateRoute'\r\nimport PablicRoute from '../PablicRoute'\r\nimport Container from '../Container/Container';\r\nimport AppBar from '../AppBar/AppBar';\r\n\r\nconst HomePage = lazy(() => import('../../views/HomePage'));\r\nconst Login = lazy(() => import('../../views/Login'));\r\nconst Register = lazy(() => import('../../views/Register'));\r\nconst Contacts = lazy(() => import('../../views/Contacts'))\r\n\r\nexport default function App() {\r\n    const dispatch = useDispatch()\r\n    const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent)\r\n\r\n    useEffect(() => {\r\n        dispatch(authOperations.fetchCurrentUser())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        !isFetchingCurrentUser && (\r\n        <Container>\r\n            <AppBar />\r\n            \r\n            <Switch>\r\n                <Suspense fallback={\r\n                    <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#303C6C\"\r\n                        height={60}\r\n                        width={60}\r\n                    />\r\n                }>\r\n                    <PablicRoute exact path='/' >\r\n                        <HomePage />\r\n                    </PablicRoute>\r\n\r\n                    <PablicRoute exact path='/register' restricted>\r\n                        <Register />\r\n                    </PablicRoute>\r\n\r\n                    <PablicRoute exact path='/login' redirectTo='/contacts' restricted>\r\n                        <Login/>\r\n                    </PablicRoute>\r\n\r\n                    <PrivateRoute path='/contacts' redirectTo='/login'>\r\n                        <Contacts />\r\n                    </PrivateRoute>\r\n                </Suspense>\r\n            </Switch>\r\n        </Container>\r\n        )    \r\n    )\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store, persistor} from \"./redux/store\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest')\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess')\r\nexport const addContactError = createAction('contacts/addContactError')\r\n\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess')\r\nexport const deleteContactError = createAction('contacts/deleteContactError')\r\n\r\nexport const changeFilter = createAction('contact/changeFilter')","import axios from 'axios'\r\n\r\nimport {addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError\r\n    } from './contacts-actions'\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactRequest);\r\n    try {\r\n        const {data} = await axios.get('/contacts')\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error))\r\n    }\r\n}\r\n\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n    }\r\n    dispatch(addContactRequest())\r\n    try {\r\n        const {data} = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error))\r\n    }\r\n}\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactRequest())\r\n    try {\r\n        const res = await axios.delete(`/contacts/${contactId}`)\r\n        dispatch(deleteContactSuccess(contactId))\r\n        console.log(res)\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error))\r\n    }\r\n}\r\nconst contactsOperation = {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteContact,\r\n}\r\n\r\nexport default contactsOperation","import {createSelector} from '@reduxjs/toolkit'\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normilizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normilizedFilter));\r\n    }\r\n)\r\n\r\nconst contactsSelector = {\r\n    getContacts,\r\n    getFilter,\r\n    getLoading,\r\n    getVisibleContacts,\r\n}\r\n\r\nexport default contactsSelector;","import { combineReducers } from \"redux\"\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {addContactSuccess,deleteContactSuccess,fetchContactSuccess,changeFilter} from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, {payload}) => payload,\r\n    [deleteContactSuccess]: (state, {payload}) => \r\n        state.filter(contact => contact.id !== payload),\r\n    [addContactSuccess]: (state, {payload}) => [payload, ...state]\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3yEgi\"};","import axios from 'axios';\r\nimport {createAsyncThunk} from '@reduxjs/toolkit'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        // COMMON - означает для всех и GET POsT\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\n\r\n//  --- если бы делали чеез fetch ---\r\n// fetch('', {\r\n//     method: 'POST',\r\n//     header: {\r\n//         Authorization: 'Bearer token'\r\n//     }\r\n// })\r\n\r\n\r\n/*\r\n  * body: { name, email, password }\r\n  * После успешной регистрации добавляем токен в HTTP-заголовок\r\n*/\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const {data} = await axios.post('/users/singup', credentials )\r\n        token.set(data.token)\r\n        return data;\r\n    } catch (error) {}\r\n})\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const {data} = await axios.post('/users/login', credentials )\r\n        token.set(data.token)\r\n        return data;\r\n    } catch (error) {}\r\n})\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset()\r\n    } catch (error) {}\r\n})\r\n\r\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n        return thunkAPI.rejectWithValue()\r\n    }\r\n\r\n    token.set(persistedToken)\r\n    try {\r\n        const {data} = await axios.get('/users/current')\r\n        return data\r\n    } catch (error) {}\r\n})\r\n\r\nconst operations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    fetchCurrentUser,\r\n}\r\n\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUsername,\r\n    getIsFetchingCurrent,\r\n}\r\n\r\nexport default authSelectors;","import {createSlice} from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: {name: null, email: null},\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetchingCurrentUser: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logOut.fulfilled](state, action) {\r\n            state.user = {name: null, email: null};\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.pending](state) {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.rejected](state) {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer"],"sourceRoot":""}